/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LEFT_ALT TAB  &kp Q  &kp W  &kp E            &kp R      &kp T        &kp Y                  &kp U        &kp I               &kp O    &kp P          &kp LEFT_BRACKET
&lt 2 ESC         &kp A  &kp S  &kp D            &kp F      &kp G        &kp H                  &kp J        &kp K               &kp L    &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C            &kp V      &kp B        &kp N                  &kp M        &kp COMMA           &kp DOT  &kp FSLH       &kp RIGHT_BRACKET
                                &mt LGUI DELETE  &kp LCTRL  &kp SPACE    &mt RIGHT_SHIFT SPACE  &lt 1 ENTER  &mt RALT BACKSPACE
            >;
        };

        nums_signs {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE      &kp N1           &kp N2                &kp N3     &kp N4          &kp N5         &kp N6     &kp N7         &kp N8        &kp N9     &kp N0     &kp LEFT_BRACE
&kp PIPE       &kp EXCLAMATION  &kp AT_SIGN           &kp POUND  &kp DOLLAR      &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp MINUS  &kp EQUAL  &kp GRAVE
&kp BACKSLASH  &kp PLUS         &kp LEFT_PARENTHESIS  &kp RPAR   &kp UNDERSCORE  &trans         &trans     &trans         &trans        &trans     &trans     &kp RIGHT_BRACE
                                                      &kp LGUI   &kp LCTRL       &kp SPACE      &kp SPACE  &kp RCTRL      &kp RALT
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans    &mo 6      &trans    &kp HOME   &kp PG_DN  &kp PG_UP  &kp END      &trans  &kp BACKSPACE
&trans  &trans  &trans  &trans    &mo 0      &trans    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT    &trans  &kp ENTER
&trans  &trans  &trans  &trans    &trans     &mo 3     &trans     &trans     &trans     &key_repeat  &trans  &kp DEL
                        &kp LGUI  &kp LCTRL  &to 0     &kp SPACE  &to 7      &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &bt BT_NXT    &bt BT_PRV    &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &out OUT_BLE  &out OUT_USB  &out OUT_TOG  &trans        &trans
                        &trans  &trans  &trans    &trans        &to 0         &trans
            >;
        };

        game {
            bindings = <
&trans  &trans    &kp UP    &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &trans  &trans    &trans  &to 0   &trans
            >;
        };

        rstlne {
            bindings = <
&mt LEFT_ALT TAB  &kp Q  &kp W  &kp D            &kp F            &kp Z           &kp SEMI          &kp U  &kp K               &kp Y      &kp P    &kp LBKT
&lt 2 ESC         &kp A  &kp S  &kp E            &kp R            &kp L           &kp H             &kp N  &kp I               &kp O      &kp T    &kp SQT
&kp LEFT_SHIFT    &kp G  &kp X  &kp C            &kp V            &kp QUESTION    &kp B             &kp J  &kp M               &kp COMMA  &kp DOT  &kp RBKT
                                &mt LGUI DELETE  &mt LCTRL SPACE  &kp SPACE       &mt RSHIFT SPACE  &mo 1  &mt RALT BACKSPACE
            >;
        };

        spacial {
            bindings = <
&none  &none  &none  &none  &none  &none          &none        &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none          &none        &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none          &none        &none  &none  &none  &none  &none
                     &none  &none  &bootloader    &bootloader  &none  &none
            >;
        };

        settings {
            bindings = <
&none         &none  &none  &none  &none  &none    &none  &kp CAPS  &kp INS  &none  &kp PRINTSCREEN  &none
&kp CAPSLOCK  &none  &none  &to 0  &none  &to 4    &none  &none     &none    &none  &none            &none
&none         &none  &none  &none  &none  &none    &none  &none     &none    &none  &none            &none
                            &none  &none  &none    &none  &to 0     &none
            >;
        };
    };
};
