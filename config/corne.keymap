/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        reboot_left {
            bindings = <&bootloader>;
            key-positions = <13 14 15 16>;
            timeout-ms = <3>;
            slow-release;
            layers = <0>;
        };

        reboot_right {
            bindings = <&bootloader>;
            key-positions = <19 20 21 22>;
            timeout-ms = <3>;
            slow-release;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LEFT_ALT TAB  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P          &kp BACKSPACE
&mt LCTRL ESC     &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON  &mt RCTRL SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp DEL
                                &kp LGUI  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp RGUI
            >;

            label = "main";
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans    &trans  &trans          &trans  &kp INSERT  &trans    &kp HOME        &kp PG_DN  &kp PG_UP  &kp END    &kp PRINTSCREEN  &kp BACKSPACE
&kp CAPS  &trans  &kp SCROLLLOCK  &trans  &trans      &trans    &kp LEFT        &kp DOWN   &kp UP     &kp RIGHT  &trans           &kp ENTER
&trans    &trans  &trans          &trans  &trans      &trans    &kp KP_NUMLOCK  &trans     &trans     &trans     &trans           &trans
                                  &mo 6   &trans      &trans    &trans          &mo 6      &trans
            >;

            label = "nav";
        };

        nums_signs {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE     &kp N1        &kp N2      &kp N3            &kp N4             &kp N5           &kp N6         &kp N7        &kp N8                    &kp N9                     &kp N0     &kp LEFT_BRACE
&kp LS(PIPE)  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)     &kp LS(DLLR)       &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)              &kp LS(UNDER)              &kp EQUAL  &kp GRAVE
&trans        &trans        &trans      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans           &kp LS(PLUS)   &kp MINUS     &kp LS(LEFT_PARENTHESIS)  &kp LS(RIGHT_PARENTHESIS)  &kp BSLH   &kp LS(RBRC)
                                        &trans            &trans             &trans           &trans         &key_repeat   &trans
            >;

            label = "nums_signs";
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &bt BT_NXT    &bt BT_PRV    &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;

            label = "bluetooth";
        };

        game {
            bindings = <
&trans  &trans    &kp UP    &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &trans  &trans    &trans  &trans  &trans
            >;

            label = "game";
        };

        layout_rstlne {
            bindings = <
&trans  &kp Q  &kp W  &kp D   &kp F   &kp Z            &kp SEMI  &kp U   &kp K   &kp Y      &kp P    &kp LBKT
&trans  &kp A  &kp S  &kp E   &kp R   &kp L            &kp H     &kp N   &kp I   &kp O      &kp T    &kp SQT
&trans  &kp G  &kp X  &kp C   &kp V   &kp LS(QMARK)    &kp B     &kp J   &kp M   &kp COMMA  &kp DOT  &kp RBKT
                      &trans  &trans  &trans           &trans    &trans  &trans
            >;

            label = "layout_rstlne";
        };

        spacial {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans         &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans       &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &bootloader    &bootloader  &trans  &trans
            >;

            label = "spacial";
        };

        Utils {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Utils";
        };
    };
};
