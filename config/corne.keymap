/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        bootloader-left {
            bindings = <&bootloader>;
            key-positions = <14 15 16 13>;
            slow-release;
            layers = <0>;
            timeout-ms = <3>;
            require-prior-idle-ms = <3>;
        };

        bootloader-right {
            bindings = <&bootloader>;
            key-positions = <19 20 21 22>;
            timeout-ms = <3>;
            require-prior-idle-ms = <3>;
            slow-release;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R                 &kp T          &kp Y        &kp U                        &kp I      &kp O    &kp P     &kp LBKT
&kp ESC    &kp A  &kp S  &kp D     &kp F                 &kp G          &kp H        &kp J                        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V                 &lt 3 B        &kp N        &kp M                        &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                         &kp LGUI  &mt LEFT_CONTROL DEL  &lt 2 SPACE    &lt 1 ENTER  &mt RIGHT_CONTROL BACKSPACE  &kp RALT
            >;

            label = "main";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans    &kp CAPS  &kp INSERT  &trans     &kp PRINTSCREEN  &kp BSPC
&trans  &trans  &trans  &trans  &mo 5   &trans       &kp LEFT  &kp DOWN  &kp UP      &kp RIGHT  &trans           &kp RET
&trans  &trans  &trans  &trans  &trans  &trans       &trans    &trans    &trans      &trans     &trans           &trans
                        &trans  &trans  &kp SPACE    &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE      &kp N1        &kp N2      &kp N3         &kp N4        &kp N5           &kp N6         &kp N7        &kp N8                    &kp N9                     &kp N0     &kp LEFT_BRACE
&kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)              &kp LS(UNDER)              &kp EQUAL  &kp GRAVE
&kp LS(PIPE)   &trans        &trans      &trans         &trans        &trans           &kp LS(PLUS)   &kp MINUS     &kp LS(LEFT_PARENTHESIS)  &kp LS(RIGHT_PARENTHESIS)  &kp BSLH   &kp LS(RBRC)
                                         &kp LGUI       &trans        &kp SPACE        &kp RET        &trans        &kp RALT
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &bt BT_NXT    &bt BT_PRV    &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;

            label = "bluetooth";
        };

        game {
            bindings = <
&trans  &trans    &kp UP    &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &trans  &trans    &trans  &trans  &trans
            >;

            label = "game";
        };

        nav_fast {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans     &trans   &trans  &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans     &trans   &trans  &trans
                        &trans  &trans  &trans    &kp RET   &trans     &trans
            >;

            label = "nav_fast";
        };
    };
};
